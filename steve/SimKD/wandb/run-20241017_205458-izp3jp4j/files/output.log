Use GPU: 0 for training
==> loading teacher model
D:\Uni\student-research-project\steve\SimKD\train_student.py:300: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(model_path, map_location=map_location)["model"])
==> done
6 1.0
Files already downloaded and verified
Files already downloaded and verified
Test: [0/313]	GPU: 0	Time: 13.102	Loss 0.7320	Acc@1 81.250	Acc@5 90.625
Test: [200/313]	GPU: 0	Time: 14.738	Loss 0.8817	Acc@1 79.260	Acc@5 94.527
teacher accuracy:  79.42
==> training...
tensor(0.8100, device='cuda:0', grad_fn=<AddBackward0>)
logits: tensor([ 0.3974,  0.2636,  0.0060, -0.4858,  1.2964,  0.0884, -0.1806, -0.2873,
         0.3162,  0.6576,  0.7729, -0.3334,  0.0019, -0.6556,  0.6156,  0.2006,
         0.4851, -0.4437,  1.0554, -0.2078, -0.4907,  0.3420, -0.0750,  0.0410,
         0.1823,  0.9563, -0.0679, -0.1343, -0.2971,  0.4456, -1.2741,  0.1384,
         0.1086,  0.0833, -0.5995,  0.0721, -0.1969, -0.1872, -0.0410,  0.1267,
         0.8731, -0.1150, -0.0926, -0.6016,  0.1454,  0.2035,  0.0019, -1.1909,
         0.0289, -0.0807,  0.0522,  0.7260, -1.3120,  0.1409, -0.4882,  0.4538,
         0.1102,  0.9558, -0.4076, -0.4496, -0.2281, -0.2580, -0.4910,  0.0166,
        -0.2083,  0.1537,  0.7142,  0.1371, -0.0817,  0.1906, -0.4053, -0.3415,
         0.3132, -0.2919, -0.3128,  0.1599, -0.3521,  1.3570,  0.5830,  0.1636,
        -0.3569, -0.3640, -0.2639,  0.2341,  0.5461,  0.1446, -0.2693, -0.2045,
         0.4018,  0.0597, -0.0255, -0.1122, -0.1719, -0.3554, -0.5557, -0.4364,
         0.0818, -0.5240, -0.4869,  0.1918], device='cuda:0',
       grad_fn=<SelectBackward0>), labels: tensor([88, 52, 22, 29, 70,  9, 19, 36, 59, 92, 46, 43, 30, 11, 25, 20, 40, 60,
        93, 29, 69, 77, 83, 50, 97, 77,  4, 20,  8, 35, 57, 35, 80, 53, 64, 33,
         8, 36, 27, 97, 57, 95, 92, 40,  2, 13, 44, 66, 63, 84, 29, 96, 49,  6,
        82, 95, 28, 21, 40, 22, 98, 28, 39, 78], device='cuda:0')
logit_max: 77
metrics: [tensor([0.], device='cuda:0'), tensor([7.8125], device='cuda:0')]
